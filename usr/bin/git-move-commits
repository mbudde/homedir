#!/bin/bash
# Michael Budde <mbudde@gmail.com>

SUBDIRECTORY_OK=Yes
OPTIONS_SPEC="\
git move-commits [options] <base-rev> [<from-branch>] <to-branch>

Rebase the commits in the range <base-rev>..<from-branch> onto of <to-branch>.

Assuming we have the following history:

              A---B---C topic
             /
        D---E---F---G master

Then the result of the following command:

    git move-commits topic~2 topic master

would be:

              A topic
             /
        D---E---F---G---B'--C' master
--
"
. "$(git --exec-path)/git-sh-setup"

while [ $# != 0 ]; do
    case "$1" in
        --)
            shift; break ;;
    esac
    shift
done

if [ $# -lt 2 ]; then
    usage
fi

base_rev=$1
if [ -n "$3" ]; then
    from_ref=$2
    to_ref=$3
else
    if from_ref=$(git symbolic-ref -q HEAD); then
        to_ref=$2
    else
        die "no explicit from-branch given and not on any branch"
    fi
fi

echo "Moving commits ${base_rev}..${from_ref##refs/heads/} ontop of ${to_ref}"

base_cid=$(git rev-parse $base_rev 2>/dev/null)
[ $? -eq 0 ] || die "unknown revision '$base_rev'"
from_branch_cid=$(git rev-parse $from_ref 2>/dev/null)
[ $? -eq 0 ] || die "unknown revision '$from_ref'"
if [ "$(git merge-base $base_cid $from_ref)" != "$base_cid" ]; then
    die "$base_rev is not an ancestor of $from_ref"
fi

git rev-parse --verify -q $to_ref &>/dev/null || die "local to-branch '$to_ref' does not exist"
if git rebase $base_cid ${from_ref##refs/heads/} --onto $to_ref; then
    git branch -f $to_ref HEAD && \
        git checkout $to_ref && \
        git update-ref $from_ref $base_cid
else
    echo "Resolve conflict and run the following command to complete:"
    echo "  git branch -f $to_ref HEAD && git checkout $to_ref && git update-ref $from_ref $base_cid"
fi
